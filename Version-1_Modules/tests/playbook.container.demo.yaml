---
- name: Test cv_container
  hosts: cvp
  connection: local
  gather_facts: no
  vars:
    - container_name: automated_container
    - container_parent: Tenant
  tasks:
    # Create container under root container
    - name: Create a container on CVP.
      cv_container:
        host: '{{ansible_host}}'
        username: '{{cvp_username}}'
        password: '{{cvp_password}}'
        protocol: https
        container: "{{container_name}}"
        parent: "{{container_parent}}"
        action: add
    
    # Look for container deleted previously.
    # If result contains, then we assume there is en error
    - name: Show a container on CVP.
      cv_container:
        host: '{{ansible_host}}'
        username: '{{cvp_username}}'
        password: '{{cvp_password}}'
        protocol: https
        container: "{{container_name}}"
        parent: "{{container_parent}}"
        action: show
      register: cvp_result
      failed_when: '"Not Found" in cvp_result.data.container'

    - name: Display cv_container show result
      debug:
        msg: "{{cvp_result}}"
    
    # Delete container created at previous stage.
    - name: Delete a container on CVP.
      cv_container:
        host: '{{ansible_host}}'
        username: '{{cvp_username}}'
        password: '{{cvp_password}}'
        protocol: https
        container: "{{container_name}}"
        parent: "{{container_parent}}"
        action: delete

    # Look for container deleted previously.
    # If result does not contain, then we assume there is en error
    - name: Show a container on CVP.
      cv_container:
        host: '{{ansible_host}}'
        username: '{{cvp_username}}'
        password: '{{cvp_password}}'
        protocol: https
        container: "{{container_name}}"
        parent: "{{container_parent}}"
        action: show
      register: cvp_result
      failed_when: '"Not Found" not in cvp_result.data.container'
    
    - name: Display cv_container show result
      debug:
        msg: "{{cvp_result}}"